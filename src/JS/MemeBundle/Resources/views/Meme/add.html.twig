{% extends '@JSMeme/layout.html.twig' %}

{% block title %} {{ parent() }}: Share your best meme {% endblock %}

{% block styles %}
    <link rel="stylesheet" href="{{ asset('plugins/bootstrap-select/css/bootstrap-select.min.css') }}">

    <style type="text/css">
        form .card:hover {
            background-color: #f8f9fa;
        }

        #preview canvas{
            max-width: 100%;
        }
    </style>
{%  endblock %}

{% block body %}
    <section class="my-3">
        <p class="h3 mb-3 font-weight-normal">
            Upload your best meme
        </p>

        <div class="mt-5">
            {{ form_start(form, {'attr': {'novalidate': 'novalidate'}}) }}

            {{ form_errors(form) }}

            <div class="form-group row">
                {{ form_label(form.file, "File", {'label_attr': {'class': 'col-3 col-form-label'}}) }}

                <div class="col">
                    <div class="custom-file">
                        {{ form_label(form.file, "Choose file", {'label_attr': {'class': 'custom-file-label'}}) }}
                        {{ form_widget(form.file, {'attr': {'class': 'custom-file-input'}}) }}
                    </div>
                    
                    <div class="text-danger">
                        {{ form_errors(form.file) }}
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-3" >
                    {# Image preview #}
                    <div id="preview" class="crop-container">
                        <img src="http://placeholder.pics/svg/300" alt="Preview" class="img-fluid crop-image">
                    </div>
                </div>

                <div class="col">
                    <div class="form-group">
                        {{ form_label(form.title, "Name", {'label_attr': {'class': ''}}) }}

                        {{ form_widget(form.title, {'attr': {'class': 'form-control', 'rows': 3, 'placeholder': 'Describe it or at least give it a name'}}) }}
                        <div class="text-danger">
                            {{ form_errors(form.title) }}
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group row">
                {{ form_label(form.source, "Source", {'label_attr': {'class': 'col-3 col-form-label'}}) }}

                <div class="col">
                    {{ form_widget(form.source, {'attr': {'class': 'form-control', 'placeholder': 'https://'}}) }}
                    <div class="text-danger">
                        {{ form_errors(form.source) }}
                    </div>
                </div>
            </div>

            <div class="form-group row">
                {{ form_label(form.category, "Category", {'label_attr': {'class': 'col-3 col-form-label'}}) }}

                <div class="col">
                    {{ form_widget(form.category, {'attr': {'class': 'form-control selectpicker'}}) }}
                    <div class="text-danger">
                        {{ form_errors(form.category) }}
                    </div>
                </div>
            </div>

            <div class="text-right py-3">
                {{ form_widget(form.save, {'label': 'Spread the fun', 'attr': {'class': 'btn btn-primary'}}) }}
            </div>

            {{ form_end(form) }}
        </div>
    </section>
{% endblock %}

{% block scripts %}
    <script type="text/javascript" src="{{ asset('plugins/bootstrap-select/js/bootstrap-select.min.js') }}"></script>

    <script>
        $(function () {
            var $fileLabel = $("div.custom-file label");
            var $fileInput = $("div.custom-file input");
            var $previewContainer = $("#preview");
            var $previewImage = $("#preview img");

            $previewContainer.css({height: $previewContainer.css("width")});

            // Manually add correct BS4 classes to file's input and label
            $fileLabel.addClass("custom-file-label");
            $fileInput.addClass("custom-file-input");

            // Convert select to selectpicker
            $('.selectpicker').selectpicker({
                size: 4,
                liveSearch: true,
                liveSearchNormalize: true
            });

            // File upload preview
            $fileInput.on("change", function (e) {
                console.log("input change");
                console.log(this.files);

                if (this.files && this.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function(e) {
                        $('#preview img').attr('src', e.target.result);
                    };

                    reader.readAsDataURL(this.files[0]);
                }
            });
        });
    </script>
{%  endblock %}

{% form_theme form _self %}

{# form_errors.html.twig #}
{% block form_errors %}
    {% spaceless %}
        {% if errors|length > 0 %}
            <ul class="list-unstyled mb-0">
                {% for error in errors %}
                    <li>{{ error.message }}</li>
                {% endfor %}
            </ul>
        {% endif %}
    {% endspaceless %}
{% endblock form_errors %}
